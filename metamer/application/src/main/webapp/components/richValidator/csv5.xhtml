<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"  xmlns:f="http://java.sun.com/jsf/core" xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j" xmlns:h="http://java.sun.com/jsf/html">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2015, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">

        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>


        <ui:define name="component">
            <p>
                Note: whenever you are not able to reproduce the issue, try to delete the session and refresh the page.
            </p>
            <p>
                Issue #5:
                <ul>
                    <li>two validators on page</li>
                    <li>a4j:ajax triggered by input change</li>
                    <li>rich:validators triggered by keyup</li>
                    <li>the position of rich:validator, a4j:ajax is NOT important here</li>
                </ul>
            </p>
            <ul>
                <li>case #1:
                    <ul>
                        <li>Press BACKSPACE in the first input</li>
                        <li class="ok">Error message for the not empty input appears</li>
                        <li>Press BACKSPACE in the second input</li>
                        <li class="ok">Error message for the regex input appears</li>
                        <li>Focus somewhere else on the page by mouse</li>
                        <li class="ok">Both messages stays visible</li>
                        <li>Type 'abc' to the first input</li>
                        <li class="ok">Error message for the not empty input disappears</li>
                        <li>Focus somewhere else on the page by mouse</li>
                        <li class="err">Error message for the regex input disappears</li>
                    </ul>
                </li>
                <li>case #2:
                    <ul>
                        <li>Press BACKSPACE in the first input</li>
                        <li class="ok">Error message for the not empty input appears</li>
                        <li>Press BACKSPACE in the second input</li>
                        <li class="ok">Error message for the regex input appears</li>
                        <li>Focus somewhere else on the page by mouse</li>
                        <li class="ok">Both messages stays visible</li>
                        <li>Type 'abc' to the first input</li>
                        <li class="ok">Error message for the not empty input disappears</li>
                        <li>Focus somewhere else on the page by TAB</li>
                        <li class="ok">Error message for the regex input is still visible</li>
                    </ul>
                </li>
                <li>case #3:
                    <ul>
                        <li>Type 'abc' to first and second input</li>
                        <li class="ok">See that both outputs are updated with every keyup</li>
                        <li>Focus somewhere else on the page</li>
                        <li>Delete whole second and first input and focus somewhere else by mouse</li>
                        <li class="err">Both error messages will disappear.</li>
                        <li class="err">Output for not empty value is updated to an empty value.</li>
                    </ul>
                </li>
                <li>case #4:
                    <ul>
                        <li>Type 'abc' to first and second input</li>
                        <li class="ok">See that both outputs are updated with every keyup</li>
                        <li>Focus somewhere else on the page</li>
                        <li>Delete whole second and first input and focus somewhere else by TAB</li>
                        <li class="err">Error message for the not empty input disappears</li>
                        <li class="ok">Error message for the regex input is still visible</li>
                        <li class="err">Output for not empty value is updated to an empty value.</li>
                    </ul>
                </li>
                <li>case #5:
                    <ul>
                        <li>Type 'abc' to first and second input</li>
                        <li class="ok">See that both outputs are updated with every keyup</li>
                        <li>Focus somewhere else on the page</li>
                        <li>Delete whole first input</li>
                        <li class="ok">Error message for the not empty input appears</li>
                        <li>Focus somewhere else on the page</li>
                        <li class="err">Error message for the not empty input disappears</li>
                        <li class="err">Output for not empty value is updated to an empty value.</li>
                    </ul>
                </li>
            </ul>
            <style>
                .err {
                    color: red;
                }
                .ok {
                    color: green;
                }
            </style>

            <h:panelGrid columns="3">
                not empty:
                <h:inputText id="input"
                             value="#{richValidatorBean2.notEmptyValue}">
                    <!--the order is not important-->
                    <rich:validator event="keyup"/>
                    <a4j:ajax event="change" render="outputPanel"/>
                </h:inputText>
                <rich:message id="msg" for="input"/>
                regex '#{richValidatorBean2.expression}':
                <h:inputText id="input2"
                             value="#{richValidatorBean2.regexValue}">
                    <!--the order is not important-->
                    <rich:validator event="keyup"/>
                    <a4j:ajax event="change" render="outputPanel"/>
                </h:inputText>
                <rich:message id="msg2" for="input2"/>
            </h:panelGrid>
            <br/><br/> 
            <a4j:outputPanel id="outputPanel">
                Output for not empty input:
                <h:outputText id="output" value="#{richValidatorBean2.notEmptyValue}"/>
                <br/>
                output for regex '#{richValidatorBean2.expression}':
                <h:outputText id="output2" value="#{richValidatorBean2.regexValue}"/>
            </a4j:outputPanel>
        </ui:define>

        <ui:define name="outOfTemplateAfter">
        </ui:define>

    </ui:composition>
</html>